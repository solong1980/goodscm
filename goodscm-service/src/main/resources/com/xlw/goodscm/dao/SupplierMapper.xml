<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xlw.goodscm.dao.SupplierMapper" >
  <resultMap id="BaseResultMap" type="com.xlw.goodscm.model.Supplier" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="group_id" property="groupId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="wechat" property="wechat" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="website" property="website" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
    <result column="memo" property="memo" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from supplier
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.xlw.goodscm.model.Supplier" useGeneratedKeys="true" keyProperty="id">
    insert into supplier (
      group_id,
      name, 
      code, 
      contacts, 
      mobile, 
      phone, 
      fax, 
      qq, 
      wechat, 
      email, 
      website, 
      address, 
      status, 
      create_time, 
      description, 
      memo
    ) values (
      #{groupId,jdbcType=BIGINT},
      #{name,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, 
      #{contacts,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, 
      #{fax,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, 
      #{wechat,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, 
      #{website,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, 
      #{description,jdbcType=LONGVARCHAR}, 
      #{memo,jdbcType=LONGVARCHAR}
    )
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.xlw.goodscm.model.Supplier" >
    update supplier
    set 
      group_id = #{groupId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      website = #{website,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      description = #{description,jdbcType=LONGVARCHAR},
      memo = #{memo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, group_id, name, code, contacts, mobile, phone, fax, qq, wechat, email, 
    website, address, status, create_time, update_time, description, memo
    from supplier
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, group_id, name, code, contacts, mobile, phone, fax, qq, wechat, email, 
    website, address, status, create_time, update_time, description, memo
    from supplier
  </select>
  
  <select id="pageQuery" resultMap="BaseResultMap"
		parameterType="com.xlw.goodscm.pojo.CmPage">
	select s.* from supplier s where 1=1
	<if test="page.c!=null and page.c.code!=null">
		and s.code like concat(#{page.c.code,jdbcType=VARCHAR},'%')
	</if>
	<if test="page.c!=null and page.c.groupId!=null and page.c.groupId>0">
		and s.group_id = #{page.c.groupId,jdbcType=BIGINT}
	</if>
	<if test="page.c!=null and page.c.name!=null">
		and s.name like concat('%',#{page.c.name,jdbcType=VARCHAR},'%')
	</if>
	limit #{page.start},#{page.count}
  </select>
  
  <select id="selectCount" resultType="java.lang.Integer" parameterType="java.lang.String">
	select count(*) from supplier where code = #{code,jdbcType=VARCHAR}
    <!-- 如果ID不为空，排除该记录  -->
	<if test="id!=null and id>0">
	  and id 
	  <![CDATA[<>]]>
	  #{id,jdbcType=BIGINT}
	</if>
  </select>
  
</mapper>