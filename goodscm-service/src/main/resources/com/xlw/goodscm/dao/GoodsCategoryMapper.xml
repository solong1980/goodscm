<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xlw.goodscm.dao.GoodsCategoryMapper" >
  <resultMap id="BaseResultMap" type="com.xlw.goodscm.model.GoodsCategory" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="category_code" property="categoryCode" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="goods_count" property="goodsCount" jdbcType="INTEGER" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from goods_category
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.xlw.goodscm.model.GoodsCategory" useGeneratedKeys="true" keyProperty="id">
    insert into goods_category (
    	parent_id, 
    	category_code, 
      	name, 
      	create_time
      )
    values (
		#{parentId,jdbcType=BIGINT}, 
		#{categoryCode,jdbcType=VARCHAR}, 
      	#{name,jdbcType=VARCHAR}, 
      	#{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.xlw.goodscm.model.GoodsCategory" >
    update goods_category
    set name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, parent_id, category_code, name, create_time, update_time
    from goods_category
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" >
    SELECT gc.id, gc.parent_id, gc.category_code, gc.name, gc.create_time, gc.update_time, 
      IFNULL(gs.goods_count,0) AS goods_count
    FROM goods_category gc LEFT JOIN (
		SELECT gc.id, COUNT(gc.id) goods_count
		FROM goods_category gc,goods g
		WHERE gc.id=g.category_id
		GROUP BY gc.id) gs 
	ON gc.id=gs.id
  </select>
  
  <select id="selectAllWithCountOld" resultMap="BaseResultMap" >
    SELECT gc.*, IFNULL(gs.goods_count,0) AS goods_count FROM goods_category gc LEFT JOIN (SELECT -1 as category_id,COUNT(*) AS goods_count FROM goods
     WHERE code is NULL OR code = '') gs
     ON gc.id = gs.category_id
	 WHERE id=-1
	   UNION ALL
    SELECT gc.*, IFNULL(gs.goods_count,0) AS goods_count FROM goods_category gc LEFT JOIN (SELECT '000000000000' category_code,COUNT(*) AS goods_count FROM goods) gs
     ON gc.category_code = gs.category_code
	 WHERE id=0
	   UNION ALL
    SELECT gc.*, IFNULL(gcc.goods_count,0) AS goods_count FROM goods_category gc LEFT JOIN (
	 SELECT CONCAT(SUBSTR(category_code,1,3) ,'000000000') category_code,COUNT(gs.id) AS goods_count FROM GOODS_CATEGORY gc LEFT JOIN goods gs ON gc.id = gs.category_id
	 WHERE gs.id IS NOT NULL GROUP BY SUBSTR(category_code,1,3)) gcc ON gc.category_code = gcc.category_code WHERE gc.id>0
  </select>
  
  <select id="selectAllWithCount" resultMap="BaseResultMap" >
    SELECT gc.*, IFNULL(gs.goods_count,0) AS goods_count
	FROM goods_category gc
	LEFT JOIN (
	SELECT -1 AS category_id, COUNT(*) AS goods_count
	FROM goods
	WHERE code IS NULL OR code = '') gs ON gc.id = gs.category_id
	WHERE id=-1 
	
	UNION 
	
	SELECT gc.*, IFNULL(gs.goods_count,0) AS goods_count
	FROM goods_category gc
	LEFT JOIN (
	SELECT '000000000000' category_code, COUNT(*) AS goods_count
	FROM goods WHERE code IS NOT NULL AND code != '') gs ON gc.category_code = gs.category_code
	WHERE id=0 
	
	UNION 
	
	select gc.*,IFNULL(uuc.goods_count,0) AS goods_count from goods_category gc left join (
	select uu.category_code,max(uu.goods_count) as goods_count from (
	
	SELECT gc.category_code, IFNULL(gcc.goods_count,0) AS goods_count
	FROM goods_category gc, (
	SELECT CONCAT(SUBSTR(category_code,1,3),'000000000') category_code, COUNT(gs.id) AS goods_count
	FROM GOODS_CATEGORY gc
	LEFT JOIN goods gs ON gc.id = gs.category_id
	WHERE gs.id IS NOT NULL
	GROUP BY SUBSTR(category_code,1,3)) gcc WHERE gc.category_code = gcc.category_code and gc.id>0
	
	UNION 
	SELECT gc.category_code, IFNULL(gcc.goods_count,0) AS goods_count
	FROM goods_category gc, (
	SELECT CONCAT(SUBSTR(category_code,1,6),'000000') category_code, COUNT(gs.id) AS goods_count
	FROM GOODS_CATEGORY gc
	LEFT JOIN goods gs ON gc.id = gs.category_id
	WHERE gs.id IS NOT NULL
	GROUP BY SUBSTR(category_code,1,6)) gcc WHERE gc.category_code = gcc.category_code and gc.id>0 
	
	UNION 
	
	SELECT gc.category_code, IFNULL(gcc.goods_count,0) AS goods_count
	FROM goods_category gc,(
	SELECT CONCAT(SUBSTR(category_code,1,9),'000') category_code, COUNT(gs.id) AS goods_count
	FROM GOODS_CATEGORY gc
	LEFT JOIN goods gs ON gc.id = gs.category_id
	WHERE gs.id IS NOT NULL
	GROUP BY SUBSTR(category_code,1,9)) gcc where gc.category_code = gcc.category_code and  gc.id>0
	
	UNION 
	SELECT gc.category_code, IFNULL(gcc.goods_count,0) AS goods_count
	FROM goods_category gc , (
	SELECT category_code, COUNT(gs.id) AS goods_count
	FROM GOODS_CATEGORY gc
	LEFT JOIN goods gs ON gc.id = gs.category_id
	WHERE gs.id IS NOT NULL
	GROUP BY category_code) gcc where gc.category_code = gcc.category_code  and  gc.id>0
	
	) uu group by uu.category_code ) uuc on gc.category_code = uuc.category_code where gc.id>0
  </select>
  
  <select id="selectByParentId" resultMap="BaseResultMap" >
    select id, parent_id, category_code, name, create_time, update_time
    from goods_category 
    where parent_id = #{parentId,jdbcType=BIGINT}
  </select>
  
  <select id="selectSubCategoryCode" resultType="java.lang.String" parameterType="java.lang.Long">
    select category_code
    from goods_category 
    where parent_id = #{parentId,jdbcType=BIGINT}
  </select>
  
  <update id="updateChildrenCodeRadical" parameterType="com.xlw.goodscm.model.GoodsCategory" >
    update goods_category
    set category_code=CONCAT(#{newCodeRadical},SUBSTR(category_code,LENGTH(#{oldCodeRadical})+1))
    where category_code like CONCAT(#{oldCodeRadical},'%')
  </update>
  
  <select id="checkCategoryGoodsCount" resultType="java.lang.Integer" parameterType="java.lang.Long">
    select count(*) from goods where category_id = #{id,jdbcType=BIGINT}
  </select>
  
   <select id="checkCategorySubCount" resultType="java.lang.Integer" parameterType="java.lang.Long">
    select count(*) from goods_category where parent_id = #{id,jdbcType=BIGINT}
  </select>
</mapper>